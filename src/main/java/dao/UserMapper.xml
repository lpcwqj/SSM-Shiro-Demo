<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserMapper">
  <resultMap id="BaseResultMap" type="beans.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
  </resultMap>

  <select id="findAllRecords" resultType="int">
    select count(*)
    from tb_user
  </select>
  <select id="findLists" resultMap="BaseResultMap">
    select *
    from tb_user
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>
  </select>
    <update id="update" parameterType="User">
        update tb_user
        <set>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="rolename != null">
                roleName = #{rolename,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
  <select id="selectUserById" resultMap="BaseResultMap" parameterType="Integer">
      select *
      from tb_user
      <where>
      <if test="id != null">
        id = #{id}
      </if>
      </where>
  </select>
    <delete id="delete">
      delete from tb_user where id = #{id}
    </delete>
    <insert id="add" parameterType="User">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="rolename != null">
                rolename,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="username != null">
                #{username},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="rolename != null">
                #{rolename},
            </if>
        </trim>
    </insert>
    <select id="vagueQuery" resultMap="BaseResultMap">
        select *
        from tb_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and userName like '%${username}%'
            </if>
        </where>
    </select>
    <delete id="batchDeletion">
        delete from tb_user
        where id in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
          #{ids}
        </foreach>
    </delete>
    <select id="checkUserByUsername" resultMap="BaseResultMap">
        select *
        from tb_user
        <where>
            <if test="username != null and username != ''">
                userName = #{username,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

</mapper>